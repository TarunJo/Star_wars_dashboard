import React from 'react';
import axios from 'axios';
import { useState, useEffect } from 'react';
import "./Generals/general.css";
import MoreMenu from './Generals/moreMenu';

function Films(props) {
  // more menu options
  const [menuVisible, setMenuVisible] = useState(false);
  const [menuPosition, setMenuPosition] = useState({ x: 0, y: 0 });

  const handleContextMenu = (event) => {
    event.preventDefault();
    // console.log("CLicked");
    setMenuVisible(true);
    // console.log(menuVisible);
    if (props.toggler1 === 0)
      setMenuPosition({ x: event.clientX + 20, y: event.clientY - 230 });
    else
      setMenuPosition({ x: event.clientX - 200, y: event.clientY - 200 });
  };

  const [films, setFilms] = useState([]);
  const [isLoading, setIsLoading] = useState(true);
  useEffect(() => {
    function handleClickOutside(event) {
      console.log(event.target.className.baseVal);
      if (event.target.className.baseVal !== "more-option-svg") {
        setMenuVisible(false);
      }
    }

    function handleScroll(event) {
      setMenuVisible(false);
    }

    const fetchData = async () => {
      setIsLoading(true);
      try {
        const response = await axios.get('https://swapi.dev/api/films/');
        setFilms(response.data.results);
        // console.log(films);
      } catch (error) {
        console.error(error);
      }
      setIsLoading(false);
      setMenuVisible(false);
    };

    fetchData();

    document.addEventListener('click', handleClickOutside);
    document.addEventListener('scroll', handleScroll);
    return () => {
      document.removeEventListener('scroll', handleScroll);
      document.removeEventListener('click', handleClickOutside);
    };
  }, []);


  if (isLoading === true) {
    // loading view
    return (
      <div className="loader-container">
        <div className="spinner"></div>
      </div>

    );

  }
  else if (props.toggler1 === 0) {
    // Grid view
    return (
      <div id="gid-view">
        <div id="base-container">
          {
            films.map((dat,ind) =>
              <div class="main-container">
                <img src={"https://picsum.photos/400/400?random=" + (ind+7)*10} alt="Error" class="img-container"></img>
                <div class="desc-container">
                  <div class="name-container">
                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" class="name-svg">
                      <path d="M20.9999 20.25H17.1899C19.1767 18.9982 20.6448 17.0711 21.3239 14.8232C22.0031 12.5752 21.8477 10.1576 20.8863 8.0151C19.925 5.8726 18.2223 4.14928 16.0916 3.16217C13.9608 2.17505 11.5452 1.99053 9.28927 2.64255C7.0333 3.29456 5.08863 4.73926 3.81299 6.71089C2.53736 8.68251 2.01655 11.0484 2.34638 13.3735C2.67622 15.6985 3.8345 17.8262 5.60817 19.3653C7.38183 20.9043 9.65159 21.7512 11.9999 21.75H20.9999C21.1988 21.75 21.3896 21.671 21.5302 21.5303C21.6709 21.3897 21.7499 21.1989 21.7499 21C21.7499 20.8011 21.6709 20.6103 21.5302 20.4697C21.3896 20.329 21.1988 20.25 20.9999 20.25ZM3.74989 12C3.74989 10.3683 4.23375 8.77325 5.14027 7.41654C6.04679 6.05984 7.33526 5.00242 8.84275 4.37799C10.3502 3.75357 12.009 3.59019 13.6094 3.90852C15.2097 4.22685 16.6797 5.01259 17.8335 6.16637C18.9873 7.32015 19.773 8.79016 20.0914 10.3905C20.4097 11.9908 20.2463 13.6496 19.6219 15.1571C18.9975 16.6646 17.9401 17.9531 16.5833 18.8596C15.2266 19.7661 13.6316 20.25 11.9999 20.25C9.81262 20.2475 7.71564 19.3775 6.169 17.8309C4.62236 16.2843 3.75237 14.1873 3.74989 12ZM11.9999 9.75C12.4449 9.75 12.8799 9.61804 13.2499 9.37081C13.6199 9.12357 13.9083 8.77217 14.0786 8.36104C14.2489 7.9499 14.2935 7.4975 14.2067 7.06105C14.1198 6.62459 13.9056 6.22368 13.5909 5.90901C13.2762 5.59434 12.8753 5.38005 12.4388 5.29323C12.0024 5.20642 11.55 5.25097 11.1389 5.42127C10.7277 5.59157 10.3763 5.87996 10.1291 6.24997C9.88185 6.61998 9.74989 7.05499 9.74989 7.5C9.74989 8.09674 9.98695 8.66903 10.4089 9.09099C10.8309 9.51295 11.4032 9.75 11.9999 9.75ZM11.9999 6.75C12.1482 6.75 12.2932 6.79399 12.4166 6.8764C12.5399 6.95881 12.636 7.07594 12.6928 7.21299C12.7496 7.35003 12.7644 7.50083 12.7355 7.64632C12.7065 7.7918 12.6351 7.92544 12.5302 8.03033C12.4253 8.13522 12.2917 8.20665 12.1462 8.23559C12.0007 8.26453 11.8499 8.24967 11.7129 8.19291C11.5758 8.13614 11.4587 8.04001 11.3763 7.91668C11.2939 7.79334 11.2499 7.64834 11.2499 7.5C11.2499 7.30109 11.3289 7.11032 11.4696 6.96967C11.6102 6.82902 11.801 6.75 11.9999 6.75ZM14.2499 16.5C14.2499 16.055 14.1179 15.62 13.8707 15.25C13.6235 14.88 13.2721 14.5916 12.8609 14.4213C12.4498 14.251 11.9974 14.2064 11.5609 14.2932C11.1245 14.38 10.7236 14.5943 10.4089 14.909C10.0942 15.2237 9.87994 15.6246 9.79313 16.061C9.70631 16.4975 9.75087 16.9499 9.92116 17.361C10.0915 17.7722 10.3798 18.1236 10.7499 18.3708C11.1199 18.618 11.5549 18.75 11.9999 18.75C12.5966 18.75 13.1689 18.5129 13.5909 18.091C14.0128 17.669 14.2499 17.0967 14.2499 16.5ZM11.2499 16.5C11.2499 16.3517 11.2939 16.2067 11.3763 16.0833C11.4587 15.96 11.5758 15.8639 11.7129 15.8071C11.8499 15.7503 12.0007 15.7355 12.1462 15.7644C12.2917 15.7933 12.4253 15.8648 12.5302 15.9697C12.6351 16.0746 12.7065 16.2082 12.7355 16.3537C12.7644 16.4992 12.7496 16.65 12.6928 16.787C12.636 16.9241 12.5399 17.0412 12.4166 17.1236C12.2932 17.206 12.1482 17.25 11.9999 17.25C11.801 17.25 11.6102 17.171 11.4696 17.0303C11.3289 16.8897 11.2499 16.6989 11.2499 16.5ZM16.4999 14.25C16.9449 14.25 17.3799 14.118 17.7499 13.8708C18.1199 13.6236 18.4083 13.2722 18.5786 12.861C18.7489 12.4499 18.7935 11.9975 18.7067 11.561C18.6198 11.1246 18.4056 10.7237 18.0909 10.409C17.7762 10.0943 17.3753 9.88005 16.9388 9.79323C16.5024 9.70642 16.05 9.75097 15.6389 9.92127C15.2277 10.0916 14.8763 10.38 14.6291 10.75C14.3819 11.12 14.2499 11.555 14.2499 12C14.2499 12.5967 14.4869 13.169 14.9089 13.591C15.3309 14.0129 15.9032 14.25 16.4999 14.25ZM16.4999 11.25C16.6482 11.25 16.7932 11.294 16.9166 11.3764C17.0399 11.4588 17.136 11.5759 17.1928 11.713C17.2496 11.85 17.2644 12.0008 17.2355 12.1463C17.2065 12.2918 17.1351 12.4254 17.0302 12.5303C16.9253 12.6352 16.7917 12.7066 16.6462 12.7356C16.5007 12.7645 16.3499 12.7497 16.2129 12.6929C16.0758 12.6361 15.9587 12.54 15.8763 12.4167C15.7939 12.2933 15.7499 12.1483 15.7499 12C15.7499 11.8011 15.8289 11.6103 15.9696 11.4697C16.1102 11.329 16.301 11.25 16.4999 11.25ZM7.49989 9.75C7.05488 9.75 6.61987 9.88196 6.24986 10.1292C5.87985 10.3764 5.59146 10.7278 5.42116 11.139C5.25087 11.5501 5.20631 12.0025 5.29313 12.439C5.37994 12.8754 5.59423 13.2763 5.9089 13.591C6.22357 13.9057 6.62448 14.1199 7.06094 14.2068C7.4974 14.2936 7.9498 14.249 8.36093 14.0787C8.77206 13.9084 9.12347 13.62 9.3707 13.25C9.61793 12.88 9.74989 12.445 9.74989 12C9.74989 11.4033 9.51284 10.831 9.09088 10.409C8.66893 9.98705 8.09663 9.75 7.49989 9.75ZM7.49989 12.75C7.35156 12.75 7.20655 12.706 7.08321 12.6236C6.95988 12.5412 6.86375 12.4241 6.80698 12.287C6.75022 12.15 6.73536 11.9992 6.7643 11.8537C6.79324 11.7082 6.86467 11.5746 6.96956 11.4697C7.07445 11.3648 7.20809 11.2933 7.35357 11.2644C7.49906 11.2355 7.64986 11.2503 7.78691 11.3071C7.92395 11.3639 8.04108 11.46 8.12349 11.5833C8.20591 11.7067 8.24989 11.8517 8.24989 12C8.24989 12.1989 8.17087 12.3897 8.03022 12.5303C7.88957 12.671 7.6988 12.75 7.49989 12.75Z" fill="white" />
                    </svg>
                    <div class="data-td">{dat.title}</div>
                  </div>
                  <div class="about-more" onClick={handleContextMenu}>
                    <svg xmlns="http://www.w3.org/2000/svg" width="25" height="24" viewBox="0 0 25 24" fill="none" className="more-option-svg">
                      <path fill-rule="evenodd" clip-rule="evenodd" d="M12.3333 17C11.2287 17 10.3333 17.8954 10.3333 19C10.3333 20.1046 11.2287 21 12.3333 21C13.4378 21 14.3333 20.1046 14.3333 19C14.3333 17.8954 13.4378 17 12.3333 17Z" fill="white" />
                      <path fill-rule="evenodd" clip-rule="evenodd" d="M12.3333 10C11.2287 10 10.3333 10.8954 10.3333 12C10.3333 13.1046 11.2287 14 12.3333 14C13.4378 14 14.3333 13.1046 14.3333 12C14.3333 10.8954 13.4378 10 12.3333 10Z" fill="white" />
                      <path fill-rule="evenodd" clip-rule="evenodd" d="M12.3333 3C11.2287 3 10.3333 3.89543 10.3333 5C10.3333 6.10457 11.2287 7 12.3333 7C13.4378 7 14.3333 6.10457 14.3333 5C14.3333 3.89543 13.4378 3 12.3333 3Z" fill="white" />
                    </svg>
                    {menuVisible && (
                      <MoreMenu menuPosition={menuPosition}></MoreMenu>
                    )}

                  </div>
                </div>
              </div>
            )
          }
        </div>
      </div>
    )
  }
  else {
    // List view
    return (
      <div>

        <table id="my-table">
          <thead>
            <tr id="heading-tr">
              <th>Name</th>
              <th>Director</th>
              <th>Release Date</th>
              <th id="th-last"> </th>
            </tr>
          </thead>
          <tbody>
            {
              films.map((dat,ind) =>
                <tr class={ind===0?"":"data-tr"}>
                  <td class="data-td-svg">
                    <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 18 18" fill="none" class="table-svg">
                      <path d="M15.7501 15.1876H12.8926C14.3827 14.2487 15.4838 12.8034 15.9931 11.1174C16.5025 9.43145 16.386 7.61826 15.6649 6.01138C14.9439 4.4045 13.6669 3.11202 12.0688 2.37168C10.4708 1.63134 8.65912 1.49295 6.96714 1.98197C5.27516 2.47098 3.81665 3.5545 2.85993 5.03322C1.9032 6.51193 1.5126 8.28639 1.75997 10.0302C2.00735 11.7739 2.87606 13.3697 4.20631 14.524C5.53656 15.6783 7.23887 16.3134 9.0001 16.3126H15.7501C15.8993 16.3126 16.0424 16.2533 16.1479 16.1478C16.2533 16.0423 16.3126 15.8992 16.3126 15.7501C16.3126 15.6009 16.2533 15.4578 16.1479 15.3523C16.0424 15.2468 15.8993 15.1876 15.7501 15.1876ZM2.8126 9.00005C2.8126 7.77628 3.17549 6.57999 3.85538 5.56246C4.53528 4.54493 5.50163 3.75187 6.63225 3.28355C7.76287 2.81523 9.00697 2.6927 10.2072 2.93144C11.4075 3.17019 12.51 3.75949 13.3753 4.62483C14.2407 5.49017 14.83 6.59267 15.0687 7.79293C15.3075 8.99319 15.1849 10.2373 14.7166 11.3679C14.2483 12.4985 13.4552 13.4649 12.4377 14.1448C11.4202 14.8247 10.2239 15.1876 9.0001 15.1876C7.35965 15.1857 5.78691 14.5332 4.62693 13.3732C3.46696 12.2132 2.81446 10.6405 2.8126 9.00005ZM9.0001 7.31255C9.33386 7.31255 9.66012 7.21358 9.93763 7.02816C10.2151 6.84273 10.4314 6.57918 10.5591 6.27083C10.6869 5.96248 10.7203 5.62318 10.6552 5.29584C10.5901 4.9685 10.4293 4.66781 10.1933 4.43181C9.95734 4.19581 9.65666 4.03509 9.32932 3.96998C9.00198 3.90487 8.66267 3.93828 8.35432 4.06601C8.04597 4.19373 7.78242 4.41002 7.597 4.68753C7.41157 4.96504 7.3126 5.2913 7.3126 5.62505C7.3126 6.07261 7.49039 6.50183 7.80686 6.8183C8.12333 7.13476 8.55255 7.31255 9.0001 7.31255ZM9.0001 5.06255C9.11135 5.06255 9.22011 5.09554 9.31261 5.15735C9.40511 5.21916 9.47721 5.30701 9.51978 5.40979C9.56236 5.51258 9.5735 5.62568 9.55179 5.73479C9.53009 5.84391 9.47652 5.94413 9.39785 6.0228C9.31918 6.10147 9.21896 6.15504 9.10984 6.17674C9.00073 6.19845 8.88763 6.18731 8.78484 6.14474C8.68206 6.10216 8.59421 6.03006 8.5324 5.93756C8.47059 5.84506 8.4376 5.7363 8.4376 5.62505C8.4376 5.47587 8.49687 5.33279 8.60236 5.22731C8.70784 5.12182 8.85092 5.06255 9.0001 5.06255ZM10.6876 12.3751C10.6876 12.0413 10.5886 11.715 10.4032 11.4375C10.2178 11.16 9.95423 10.9437 9.64588 10.816C9.33753 10.6883 8.99823 10.6549 8.67089 10.72C8.34354 10.7851 8.04286 10.9458 7.80686 11.1818C7.57086 11.4178 7.41014 11.7185 7.34503 12.0458C7.27991 12.3732 7.31333 12.7125 7.44106 13.0208C7.56878 13.3292 7.78507 13.5927 8.06258 13.7782C8.34009 13.9636 8.66635 14.0626 9.0001 14.0626C9.44766 14.0626 9.87688 13.8848 10.1933 13.5683C10.5098 13.2518 10.6876 12.8226 10.6876 12.3751ZM8.4376 12.3751C8.4376 12.2638 8.47059 12.155 8.5324 12.0625C8.59421 11.97 8.68206 11.8979 8.78484 11.8554C8.88763 11.8128 9.00073 11.8017 9.10984 11.8234C9.21896 11.8451 9.31918 11.8986 9.39785 11.9773C9.47652 12.056 9.53009 12.1562 9.55179 12.2653C9.5735 12.3744 9.56236 12.4875 9.51978 12.5903C9.47721 12.6931 9.40511 12.7809 9.31261 12.8428C9.22011 12.9046 9.11135 12.9376 9.0001 12.9376C8.85092 12.9376 8.70784 12.8783 8.60236 12.7728C8.49687 12.6673 8.4376 12.5242 8.4376 12.3751ZM12.3751 10.6876C12.7089 10.6876 13.0351 10.5886 13.3126 10.4032C13.5901 10.2177 13.8064 9.95418 13.9341 9.64583C14.0619 9.33748 14.0953 8.99818 14.0302 8.67084C13.9651 8.34349 13.8043 8.04281 13.5683 7.80681C13.3323 7.57081 13.0317 7.41009 12.7043 7.34498C12.377 7.27986 12.0377 7.31328 11.7293 7.44101C11.421 7.56873 11.1574 7.78502 10.972 8.06253C10.7866 8.34004 10.6876 8.6663 10.6876 9.00005C10.6876 9.44761 10.8654 9.87683 11.1819 10.1933C11.4983 10.5098 11.9276 10.6876 12.3751 10.6876ZM12.3751 8.43755C12.4864 8.43755 12.5951 8.47054 12.6876 8.53235C12.7801 8.59416 12.8522 8.68201 12.8948 8.78479C12.9374 8.88758 12.9485 9.00068 12.9268 9.10979C12.9051 9.21891 12.8515 9.31913 12.7729 9.3978C12.6942 9.47647 12.594 9.53004 12.4848 9.55174C12.3757 9.57345 12.2626 9.56231 12.1598 9.51973C12.0571 9.47716 11.9692 9.40506 11.9074 9.31256C11.8456 9.22006 11.8126 9.1113 11.8126 9.00005C11.8126 8.85087 11.8719 8.70779 11.9774 8.60231C12.0828 8.49682 12.2259 8.43755 12.3751 8.43755ZM5.6251 7.31255C5.29135 7.31255 4.96509 7.41152 4.68758 7.59695C4.41007 7.78237 4.19378 8.04592 4.06606 8.35427C3.93833 8.66262 3.90491 9.00192 3.97003 9.32927C4.03514 9.65661 4.19586 9.95729 4.43186 10.1933C4.66786 10.4293 4.96854 10.59 5.29589 10.6551C5.62323 10.7202 5.96253 10.6868 6.27088 10.5591C6.57923 10.4314 6.84278 10.2151 7.02821 9.93758C7.21363 9.66007 7.3126 9.33381 7.3126 9.00005C7.3126 8.5525 7.13481 8.12328 6.81835 7.80681C6.50188 7.49034 6.07266 7.31255 5.6251 7.31255ZM5.6251 9.56255C5.51385 9.56255 5.4051 9.52956 5.31259 9.46775C5.22009 9.40595 5.14799 9.3181 5.10542 9.21531C5.06285 9.11253 5.05171 8.99943 5.07341 8.89031C5.09511 8.7812 5.14869 8.68097 5.22736 8.60231C5.30602 8.52364 5.40625 8.47007 5.51536 8.44836C5.62448 8.42666 5.73758 8.4378 5.84036 8.48037C5.94315 8.52294 6.031 8.59504 6.0928 8.68754C6.15461 8.78005 6.1876 8.8888 6.1876 9.00005C6.1876 9.14924 6.12834 9.29231 6.02285 9.3978C5.91736 9.50329 5.77429 9.56255 5.6251 9.56255Z" fill="white" />
                    </svg>
                    <div>{dat.title}</div></td>
                  <td class="data-td">{dat.director}</td>
                  <td class="data-td">{dat.release_date}</td>
                  <td class="data-td">
                  <div class="table-more" onClick={handleContextMenu}>
                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" className="more-option-svg">
                      <path fill-rule="evenodd" clip-rule="evenodd" d="M12 17C10.8954 17 10 17.8954 10 19C10 20.1046 10.8954 21 12 21C13.1046 21 14 20.1046 14 19C14 17.8954 13.1046 17 12 17Z" fill="white" />
                      <path fill-rule="evenodd" clip-rule="evenodd" d="M12 10C10.8954 10 10 10.8954 10 12C10 13.1046 10.8954 14 12 14C13.1046 14 14 13.1046 14 12C14 10.8954 13.1046 10 12 10Z" fill="white" />
                      <path fill-rule="evenodd" clip-rule="evenodd" d="M12 3C10.8954 3 10 3.89543 10 5C10 6.10457 10.8954 7 12 7C13.1046 7 14 6.10457 14 5C14 3.89543 13.1046 3 12 3Z" fill="white" />
                    </svg>
                    {menuVisible && (
                      <MoreMenu menuPosition={menuPosition}></MoreMenu>
                    )}
                    </div>
                  </td>
                </tr>
              )
            }
          </tbody>
        </table>

      </div>
    )
  }
}
export default Films;