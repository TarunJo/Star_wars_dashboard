import React from 'react';
import axios from 'axios';
import { useState, useEffect } from 'react';
import "./general.css";

function Films(props) {
  const [films, setFilms] = useState([]);

  useEffect(() => {
    const fetchData = async () => {
      try {
        const response = await axios.get('https://swapi.dev/api/films/');
        setFilms(response.data.results);
        // console.log(films);
      } catch (error) {
        console.error(error);
      }
    };

    fetchData();
  }, []);

  if (props.toggler1 === 0) {
    return (
      <div>Grid View</div>
    )
  }
  else {
    return (
      <div>

        <table id="my-table">
          <thead>
            <tr id="heading-tr">
              <th>Name</th>
              <th>Director</th>
              <th>Release Date</th>
              <th id="th-last"> </th>
            </tr>
          </thead>
          <tbody>
            {
              films.map((dat) =>
                <tr class="data-tr">
                  <td class="data-td-svg">
                  <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 18 18" fill="none" class="table-svg">
                      <path d="M15.7501 15.1876H12.8926C14.3827 14.2487 15.4838 12.8034 15.9931 11.1174C16.5025 9.43145 16.386 7.61826 15.6649 6.01138C14.9439 4.4045 13.6669 3.11202 12.0688 2.37168C10.4708 1.63134 8.65912 1.49295 6.96714 1.98197C5.27516 2.47098 3.81665 3.5545 2.85993 5.03322C1.9032 6.51193 1.5126 8.28639 1.75997 10.0302C2.00735 11.7739 2.87606 13.3697 4.20631 14.524C5.53656 15.6783 7.23887 16.3134 9.0001 16.3126H15.7501C15.8993 16.3126 16.0424 16.2533 16.1479 16.1478C16.2533 16.0423 16.3126 15.8992 16.3126 15.7501C16.3126 15.6009 16.2533 15.4578 16.1479 15.3523C16.0424 15.2468 15.8993 15.1876 15.7501 15.1876ZM2.8126 9.00005C2.8126 7.77628 3.17549 6.57999 3.85538 5.56246C4.53528 4.54493 5.50163 3.75187 6.63225 3.28355C7.76287 2.81523 9.00697 2.6927 10.2072 2.93144C11.4075 3.17019 12.51 3.75949 13.3753 4.62483C14.2407 5.49017 14.83 6.59267 15.0687 7.79293C15.3075 8.99319 15.1849 10.2373 14.7166 11.3679C14.2483 12.4985 13.4552 13.4649 12.4377 14.1448C11.4202 14.8247 10.2239 15.1876 9.0001 15.1876C7.35965 15.1857 5.78691 14.5332 4.62693 13.3732C3.46696 12.2132 2.81446 10.6405 2.8126 9.00005ZM9.0001 7.31255C9.33386 7.31255 9.66012 7.21358 9.93763 7.02816C10.2151 6.84273 10.4314 6.57918 10.5591 6.27083C10.6869 5.96248 10.7203 5.62318 10.6552 5.29584C10.5901 4.9685 10.4293 4.66781 10.1933 4.43181C9.95734 4.19581 9.65666 4.03509 9.32932 3.96998C9.00198 3.90487 8.66267 3.93828 8.35432 4.06601C8.04597 4.19373 7.78242 4.41002 7.597 4.68753C7.41157 4.96504 7.3126 5.2913 7.3126 5.62505C7.3126 6.07261 7.49039 6.50183 7.80686 6.8183C8.12333 7.13476 8.55255 7.31255 9.0001 7.31255ZM9.0001 5.06255C9.11135 5.06255 9.22011 5.09554 9.31261 5.15735C9.40511 5.21916 9.47721 5.30701 9.51978 5.40979C9.56236 5.51258 9.5735 5.62568 9.55179 5.73479C9.53009 5.84391 9.47652 5.94413 9.39785 6.0228C9.31918 6.10147 9.21896 6.15504 9.10984 6.17674C9.00073 6.19845 8.88763 6.18731 8.78484 6.14474C8.68206 6.10216 8.59421 6.03006 8.5324 5.93756C8.47059 5.84506 8.4376 5.7363 8.4376 5.62505C8.4376 5.47587 8.49687 5.33279 8.60236 5.22731C8.70784 5.12182 8.85092 5.06255 9.0001 5.06255ZM10.6876 12.3751C10.6876 12.0413 10.5886 11.715 10.4032 11.4375C10.2178 11.16 9.95423 10.9437 9.64588 10.816C9.33753 10.6883 8.99823 10.6549 8.67089 10.72C8.34354 10.7851 8.04286 10.9458 7.80686 11.1818C7.57086 11.4178 7.41014 11.7185 7.34503 12.0458C7.27991 12.3732 7.31333 12.7125 7.44106 13.0208C7.56878 13.3292 7.78507 13.5927 8.06258 13.7782C8.34009 13.9636 8.66635 14.0626 9.0001 14.0626C9.44766 14.0626 9.87688 13.8848 10.1933 13.5683C10.5098 13.2518 10.6876 12.8226 10.6876 12.3751ZM8.4376 12.3751C8.4376 12.2638 8.47059 12.155 8.5324 12.0625C8.59421 11.97 8.68206 11.8979 8.78484 11.8554C8.88763 11.8128 9.00073 11.8017 9.10984 11.8234C9.21896 11.8451 9.31918 11.8986 9.39785 11.9773C9.47652 12.056 9.53009 12.1562 9.55179 12.2653C9.5735 12.3744 9.56236 12.4875 9.51978 12.5903C9.47721 12.6931 9.40511 12.7809 9.31261 12.8428C9.22011 12.9046 9.11135 12.9376 9.0001 12.9376C8.85092 12.9376 8.70784 12.8783 8.60236 12.7728C8.49687 12.6673 8.4376 12.5242 8.4376 12.3751ZM12.3751 10.6876C12.7089 10.6876 13.0351 10.5886 13.3126 10.4032C13.5901 10.2177 13.8064 9.95418 13.9341 9.64583C14.0619 9.33748 14.0953 8.99818 14.0302 8.67084C13.9651 8.34349 13.8043 8.04281 13.5683 7.80681C13.3323 7.57081 13.0317 7.41009 12.7043 7.34498C12.377 7.27986 12.0377 7.31328 11.7293 7.44101C11.421 7.56873 11.1574 7.78502 10.972 8.06253C10.7866 8.34004 10.6876 8.6663 10.6876 9.00005C10.6876 9.44761 10.8654 9.87683 11.1819 10.1933C11.4983 10.5098 11.9276 10.6876 12.3751 10.6876ZM12.3751 8.43755C12.4864 8.43755 12.5951 8.47054 12.6876 8.53235C12.7801 8.59416 12.8522 8.68201 12.8948 8.78479C12.9374 8.88758 12.9485 9.00068 12.9268 9.10979C12.9051 9.21891 12.8515 9.31913 12.7729 9.3978C12.6942 9.47647 12.594 9.53004 12.4848 9.55174C12.3757 9.57345 12.2626 9.56231 12.1598 9.51973C12.0571 9.47716 11.9692 9.40506 11.9074 9.31256C11.8456 9.22006 11.8126 9.1113 11.8126 9.00005C11.8126 8.85087 11.8719 8.70779 11.9774 8.60231C12.0828 8.49682 12.2259 8.43755 12.3751 8.43755ZM5.6251 7.31255C5.29135 7.31255 4.96509 7.41152 4.68758 7.59695C4.41007 7.78237 4.19378 8.04592 4.06606 8.35427C3.93833 8.66262 3.90491 9.00192 3.97003 9.32927C4.03514 9.65661 4.19586 9.95729 4.43186 10.1933C4.66786 10.4293 4.96854 10.59 5.29589 10.6551C5.62323 10.7202 5.96253 10.6868 6.27088 10.5591C6.57923 10.4314 6.84278 10.2151 7.02821 9.93758C7.21363 9.66007 7.3126 9.33381 7.3126 9.00005C7.3126 8.5525 7.13481 8.12328 6.81835 7.80681C6.50188 7.49034 6.07266 7.31255 5.6251 7.31255ZM5.6251 9.56255C5.51385 9.56255 5.4051 9.52956 5.31259 9.46775C5.22009 9.40595 5.14799 9.3181 5.10542 9.21531C5.06285 9.11253 5.05171 8.99943 5.07341 8.89031C5.09511 8.7812 5.14869 8.68097 5.22736 8.60231C5.30602 8.52364 5.40625 8.47007 5.51536 8.44836C5.62448 8.42666 5.73758 8.4378 5.84036 8.48037C5.94315 8.52294 6.031 8.59504 6.0928 8.68754C6.15461 8.78005 6.1876 8.8888 6.1876 9.00005C6.1876 9.14924 6.12834 9.29231 6.02285 9.3978C5.91736 9.50329 5.77429 9.56255 5.6251 9.56255Z" fill="white" />
                    </svg>
                    <div>{dat.title}</div></td>
                  <td class="data-td">{dat.director}</td>
                  <td class="data-td">{dat.release_date}</td>
                  <td class="data-td"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none">
                    <path fill-rule="evenodd" clip-rule="evenodd" d="M12 17C10.8954 17 10 17.8954 10 19C10 20.1046 10.8954 21 12 21C13.1046 21 14 20.1046 14 19C14 17.8954 13.1046 17 12 17Z" fill="white" />
                    <path fill-rule="evenodd" clip-rule="evenodd" d="M12 10C10.8954 10 10 10.8954 10 12C10 13.1046 10.8954 14 12 14C13.1046 14 14 13.1046 14 12C14 10.8954 13.1046 10 12 10Z" fill="white" />
                    <path fill-rule="evenodd" clip-rule="evenodd" d="M12 3C10.8954 3 10 3.89543 10 5C10 6.10457 10.8954 7 12 7C13.1046 7 14 6.10457 14 5C14 3.89543 13.1046 3 12 3Z" fill="white" />
                  </svg>
                  </td>
                </tr>
              )
            }
          </tbody>
        </table>

      </div>
    )
  }
}
export default Films;